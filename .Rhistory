bs_add_rules(
list(
".info-box-header { background-color: $phs-teal; color: #FFF;}", # info box header lighter phs purple colour with white text
".methodology-table td{ border:thin solid black; padding:3px;}", # for indicator def tab - make nested table cells have black border
".rt-tr-details {padding: 0px; box-shadow: inset 0 1px 3px #dbdbdb; background: #FDFDFC;}", # for indicator definitions tab - make expandable panel grey
".chart-controls-icon {background-color:$phs-blue; color:white; border-radius:5em; padding:5px;}" # styling of the chart controls icon
)
)
runApp('shiny_app')
runApp('shiny_app')
plot_data_long
Q
runApp('shiny_app')
plot_data_long
runApp('shiny_app')
simulate_geo_tax_policy(0,0,0,0)
mlw_bound_region
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
?hchart
runApp('shiny_app')
bl_cncpts
test_df <- bl_cncpts %>% filter(Income=='Net Market Income',Parameter=="Rate of poverty", `Poverty line`=="pline_mod", Area=="Country")
hchart(object = test_df,
type = "bar", hcaes(x = admin_name, y = Value, group = Policy))
View(test_df)
test_df <- bl_geo_cncpts %>% filter(Income=='Net Market Income',Parameter=="Rate of poverty", `Poverty line`=="pline_mod", Area=="Country")
test_df
bl_geo_cncpts
test_df <- bl_geo_cncpts %>% filter(Income=='Net Market Income',Parameter=="Rate of poverty", `Poverty line`=="pline_mod", Area=="region")
test_df
hchart(object = test_df,
type = "bar", hcaes(x = admin_name, y = `Pre-reform`, group = admin_name))
runApp('shiny_app')
plot_data_long
highchart() %>%
hc_chart(type = "bar") %>%  # 'bar' = horizontal bar
hc_add_series(data = plot_data_long,
hcaes(x = admin_name, y = Value, group = Policy)) %>%
hc_colors(unname(hc_colors_vec[levels(plot_data_long$Policy)])) %>%
hc_xAxis(title = list(text = ""), categories = unique(plot_data_long$admin_name)) %>%
hc_yAxis(title = list(text = "")) %>%
hc_plotOptions(
bar = list(
grouping = TRUE,
groupPadding = 0.1,
pointPadding = 0.05
)
) %>%
hc_legend(enabled = TRUE) %>%
hc_chart(backgroundColor = 'white') %>%
hc_caption(
text = "Data source: Malawi Fifth Integrated Household Survey 2019-2020",
style = list(fontSize = "8px", color = "black")
)
hc_chart(plot_data_long, type = "bar",hcaes(x = admin_name, y = Value, group = Policy)) %>%  # 'bar' = horizontal bar
hc_colors(unname(hc_colors_vec[levels(plot_data_long$Policy)])) %>%
hc_xAxis(title = list(text = ""), categories = unique(plot_data_long$admin_name)) %>%
hc_yAxis(title = list(text = "")) %>%
hc_plotOptions(
bar = list(
grouping = TRUE,
groupPadding = 0.1,
pointPadding = 0.05
)
) %>%
hc_legend(enabled = TRUE) %>%
hc_chart(backgroundColor = 'white') %>%
hc_caption(
text = "Data source: Malawi Fifth Integrated Household Survey 2019-2020",
style = list(fontSize = "8px", color = "black")
)
highchart() %>%
hc_chart(plot_data_long, type = "bar",hcaes(x = admin_name, y = Value, group = Policy)) %>%  # 'bar' = horizontal bar
hc_colors(unname(hc_colors_vec[levels(plot_data_long$Policy)])) %>%
hc_xAxis(title = list(text = ""), categories = unique(plot_data_long$admin_name)) %>%
hc_yAxis(title = list(text = "")) %>%
hc_plotOptions(
bar = list(
grouping = TRUE,
groupPadding = 0.1,
pointPadding = 0.05
)
) %>%
hc_legend(enabled = TRUE) %>%
hc_chart(backgroundColor = 'white') %>%
hc_caption(
text = "Data source: Malawi Fifth Integrated Household Survey 2019-2020",
style = list(fontSize = "8px", color = "black")
)
hchart(plot_data_long,
type = "bar", # 'bar' = horizontal bar chart
hcaes(x = admin_name, y = Value, group = Policy)) %>%
hc_colors(unname(hc_colors_vec[levels(factor(plot_data_long$Policy))])) %>%
hc_xAxis(title = list(text = ""), categories = unique(plot_data_long$admin_name)) %>%
hc_yAxis(title = list(text = "")) %>%
hc_plotOptions(
bar = list(
grouping = TRUE,
groupPadding = 0.1,
pointPadding = 0.05
)
) %>%
hc_legend(enabled = TRUE) %>%
hc_chart(backgroundColor = 'white') %>%
hc_caption(
text = "Data source: Malawi Fifth Integrated Household Survey 2019-2020",
style = list(fontSize = "8px", color = "black")
)
runApp('shiny_app')
Q
runApp('shiny_app')
runApp('shiny_app')
hchart(plot_data_long,
type = "bar", # 'bar' = horizontal bar chart
hcaes(x = admin_name, y = Value, group = Policy)) %>%
hc_colors(unname(hc_colors_vec[levels(factor(plot_data_long$Policy))])) %>%
hc_xAxis(title = list(text = ""), categories = unique(plot_data_long$admin_name)) %>%
hc_yAxis(title = list(text = "")) %>%
hc_plotOptions(
bar = list(
grouping = TRUE,
groupPadding = 0.1,
pointPadding = 0.05
)
) %>%
hc_legend(enabled = TRUE) %>%
hc_chart(backgroundColor = 'white') %>%
hc_caption(
text = "Data source: Malawi Fifth Integrated Household Survey 2019-2020",
style = list(fontSize = "8px", color = "black")
)
runApp('shiny_app')
runApp('shiny_app')
create_geo_pov_bar_chart(geo_data(),
xaxis_col = "admin_name",
yaxis_col = "Current Policy")
create_geo_pov_bar_chart(geo_data(),
xaxis_col = "admin_name",
yaxis_col = "Current Policy") %>%
hc_exporting(
filename = paste0("Poverty - ",
first(geo_data()$Parameter), " - ",
first(geo_data()$Income), " - ",
first(geo_data()$Area), " - ",
first(geo_data()$`Poverty line`)),
chartOptions = list(
title = list(text = input$parameter_filter),
subtitle = list(
text = paste0(
"Income concept : ", input$geo_income,
"Area : ", input$geo_pov_areas_filter,
"Poverty line : ",  input$geo_pov_line
)
))
)
create_geo_pov_bar_chart(geo_data(),
xaxis_col = "admin_name",
yaxis_col = "Current Policy") %>%
hc_exporting(
filename = paste0("Poverty - ",
first(geo_data()$Parameter), " - ",
first(geo_data()$Income), " - ",
first(geo_data()$Area), " - ",
first(geo_data()$`Poverty line`)),
chartOptions = list(
title = list(text = input$parameter_filter),
subtitle = list(
text = paste0(
"Income concept : ", input$geo_income,
"Area : ", input$geo_pov_areas_filter,
"Poverty line : ",  input$geo_pov_line
)
))
)
runApp('shiny_app')
create_geo_pov_bar_chart(geo_data(),
xaxis_col = "admin_name",
yaxis_col = "Current Policy") %>%
hc_exporting(
filename = paste0("Poverty - ",
first(geo_data()$Parameter), " - ",
first(geo_data()$Income), " - ",
first(geo_data()$Area), " - ",
first(geo_data()$`Poverty line`))
)
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
?navset_card_pill
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
?layout_columns
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
hchart(plot_data_long,
type = "bar", # 'bar' = horizontal bar chart
hcaes(x = admin_name, y = Value, group = Policy)) %>%
hc_colors(unname(hc_colors_vec[levels(factor(plot_data_long$Policy))])) %>%
hc_xAxis(title = list(text = ""), categories = unique(plot_data_long$admin_name)) %>%
hc_yAxis(title = list(text = "")) %>%
hc_tooltip(
headerFormat = "<table>",
pointFormat = paste(
'<tr><th colspan="2"><p>{point.areaname}</p></th></tr>',
"<tr><th>{point.type_definition}</th><td>{point.measure}</td></tr>",
"<tr><th>upper ci:</th><td>{point.upci}</td></tr>",
"<tr><th>lower ci:</th><td>{point.lowci}</td></tr>"
),
footerFormat = "</table>",
useHTML = TRUE
) %>%
hc_legend(enabled = TRUE) %>%
hc_chart(backgroundColor = 'white') %>%
hc_caption(
text = "Data source: Malawi Fifth Integrated Household Survey 2019-2020",
style = list(fontSize = "8px", color = "black")
)
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
chart <- highchart() %>%
hc_chart(type = "dumbbell") %>%
hc_title(text = NULL) %>%
hc_xAxis(
type = "category",
categories = plot_data$admin_name
) %>%
hc_yAxis(
title = list(text = "Poverty Rate (%)")
) %>%
hc_add_series(
data = pmap(plot_data, function(admin_name, `Pre-reform`, `Current Policy`, ...) {
list(
name = admin_name,
low = `Pre-reform`,
high = `Current Policy`
)
}),
name = "Poverty Rate Change",
color = "#006D77",
lowColor = "#A1AEB1"
) %>%
hc_tooltip(
shared = FALSE,
headerFormat = "<b>{point.name}</b><br/>",
pointFormat = "Pre-reform: <b>{point.low:.1f}%</b><br/>Current Policy: <b>{point.high:.1f}%</b><br/>Change: <b>{point.change:.1f}%</b>"
) %>%
hc_legend(enabled = FALSE) %>%
hc_plotOptions(
dumbbell = list(
connectorWidth = 2,
connectorColor = "#666666"
)
)
chart <- highchart() %>%
hc_chart(type = "dumbbell") %>%
hc_title(text = NULL) %>%
hc_xAxis(
type = "category",
categories = geo_data()$admin_name
) %>%
hc_yAxis(
title = list(text = "Poverty Rate (%)")
) %>%
hc_add_series(
data = pmap(geo_data(), function(admin_name, `Pre-reform`, `Current Policy`, ...) {
list(
name = admin_name,
low = `Pre-reform`,
high = `Current Policy`
)
}),
name = "Poverty Rate Change",
color = "#006D77",
lowColor = "#A1AEB1"
) %>%
hc_tooltip(
shared = FALSE,
headerFormat = "<b>{point.name}</b><br/>",
pointFormat = "Pre-reform: <b>{point.low:.1f}%</b><br/>Current Policy: <b>{point.high:.1f}%</b><br/>Change: <b>{point.change:.1f}%</b>"
) %>%
hc_legend(enabled = FALSE) %>%
hc_plotOptions(
dumbbell = list(
connectorWidth = 2,
connectorColor = "#666666"
)
)
chart <- highchart() %>%
hc_chart(type = "dumbbell") %>%
hc_title(text = NULL) %>%
hc_xAxis(
type = "category",
categories = geo_data()$admin_name
) %>%
hc_yAxis(
title = list(text = "Poverty Rate (%)")
) %>%
hc_add_series(
data = pmap(geo_data(), function(admin_name, `Pre-reform`, `Current Policy`, ...) {
list(
name = admin_name,
low = `Pre-reform`,
high = `Current Policy`
)
}),
name = "Poverty Rate Change",
color = "#006D77",
lowColor = "#A1AEB1"
) %>%
hc_tooltip(
shared = FALSE,
headerFormat = "<b>{point.name}</b><br/>",
pointFormat = "Pre-reform: <b>{point.low:.1f}%</b><br/>Current Policy: <b>{point.high:.1f}%</b><br/>Change: <b>{point.change:.1f}%</b>"
) %>%
hc_legend(enabled = FALSE) %>%
hc_plotOptions(
dumbbell = list(
connectorWidth = 2,
connectorColor = "#666666"
)
)
chart
plot_data_long %>%
# add the column range to serve as the dumbbell plot
hchart(
type = "columnrange",
hcaes(x = admin_name, y = Value, low = min, high = max),
# remove from legend
showInLegend = FALSE
) %>%
# add the dots
hc_add_series(
data = plot_data_long,
"scatter",
hcaes(x = admin_name, y = Value, group = Policy)
) %>%
# adjust the look
hc_plotOptions(
# adjust appearance of column ranges
columnrange = list(
# make it look narrower
maxPointWidth = 6,
# make it black
color = "black"
),
scatter = list(
# remove the linewidth so there is no linewidth
lineWidth = 0,
# adjust the points
marker = list(
# make the size of the circles bigger
radius = 9
),
showInLegend = TRUE
)
)
highchart() %>%
hc_chart(type = "dumbbell") %>%
hc_title(text = NULL) %>%
hc_xAxis(
type = "category",
categories = geo_data()$admin_name
) %>%
hc_yAxis(
title = list(text = "Poverty Rate (%)")
) %>%
hc_add_series(
data = pmap(geo_data(), function(admin_name, `Pre-reform`, `Current Policy`, ...) {
list(
name = admin_name,
low = `Pre-reform`,
high = `Current Policy`
)
}),
name = "Poverty Rate Change",
color = "#006D77",
lowColor = "#A1AEB1"
) %>%
hc_tooltip(
shared = FALSE,
headerFormat = "<b>{point.name}</b><br/>",
pointFormat = "Pre-reform: <b>{point.low:.1f}%</b><br/>Current Policy: <b>{point.high:.1f}%</b><br/>Change: <b>{point.change:.1f}%</b>"
) %>%
hc_legend(enabled = FALSE) %>%
hc_plotOptions(
dumbbell = list(
connectorWidth = 2,
connectorColor = "#666666"
)
)
highchart() %>%
hc_chart(type = "dumbbell") %>%
hc_title(text = NULL) %>%
hc_xAxis(
type = "category",
categories = geo_data()$admin_name
) %>%
hc_yAxis(
title = list(text = "Poverty Rate (%)")
) %>%
hc_add_series(
data = pmap(geo_data(), function(admin_name, `Pre-reform`, `Current Policy`, ...) {
list(
name = admin_name,
low = `Pre-reform`,
high = `Current Policy`
)
}),
name = "Poverty Rate Change",
color = "#006D77",
lowColor = "#A1AEB1"
) %>%
hc_tooltip(
shared = FALSE,
headerFormat = "<b>{point.name}</b><br/>",
pointFormat = "Pre-reform: <b>{point.low:.1f}%</b><br/>Current Policy: <b>{point.high:.1f}%</b><br/>Change: <b>{point.change:.1f}%</b>"
) %>%
hc_legend(enabled = TRUE) %>%
hc_plotOptions(
dumbbell = list(
connectorWidth = 2,
connectorColor = "#666666"
)
)
# Plot using highcharter
hc <- hchart(
plot_data_long,
type = "column",
hcaes(x = admin_name, y = Value, group = Policy)) %>%
hc_colors(unname(hc_colors_vec[levels(plot_data_long$Policy)])) %>%
hc_xAxis(title = list(text = "Income Concept")) %>%
hc_yAxis(title = list(text = "")) %>%
hc_add_theme(theme) %>%
hc_plotOptions(column = list(groupPadding = 0.1)) %>%
hc_tooltip(shared = TRUE)%>%
hc_caption(
text = "Data source: Malawi Fifth Integrated Household Survey 2019-2020",
style = list(fontSize = "8px", color = "black")
)
hc
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
?navset_card_pill
?nav_panel
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
shiny::runApp('shiny_app')
runApp()
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
??L.easyPrint
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
? showToast
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
shiny::runApp('shiny_app')
shiny::runApp('shiny_app')
